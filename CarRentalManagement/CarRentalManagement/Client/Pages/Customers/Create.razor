@page "/customers/create"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3 class="card-title">Create New Customer</h3>
<hr />
<br />
<EditForm Model="Customer" OnValidSubmit="CreateCustomer">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Tax Identification Number: </label>
        <div>
            <InputText @bind-Value="Customer.TaxId" class="form-control" />
            <ValidationMessage For="() => Customer.TaxId" />
        </div>
    </div>
    <div class="form-group">
        <label>Address: </label>
        <div>
            <InputTextArea @bind-Value="Customer.Address" class="form-control" />
            <ValidationMessage For="() => Customer.Address" />
        </div>
    </div>
    <div class="form-group">
        <label>Contact Number: </label>
        <div>
            <InputText @bind-Value="Customer.ContactNumber" class="form-control" />
            <ValidationMessage For="() => Customer.ContactNumber" />
        </div>
    </div>
    <div class="form-group">
        <label>Email: </label>
        <div>
            <InputText @bind-Value="Customer.EmailAddress" class="form-control" />
            <ValidationMessage For="() => Customer.EmailAddress" />
        </div>
    </div>
    <button type="submit" class="btn btn-success btn-block">Create Customer</button>
</EditForm>


@code {
    Customer Customer = new Customer();

    protected async override Task OnInitializedAsync()
    {
    }

    private async Task CreateCustomer()
    {
        await _client.PostAsJsonAsync(Endpoints.Customers, Customer);
        _navManager.NavigateTo("/customers/");
    }

}
